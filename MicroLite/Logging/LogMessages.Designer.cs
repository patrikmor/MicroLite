//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MicroLite.Logging {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LogMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LogMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MicroLite.Logging.LogMessages", typeof(LogMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}.{1}&apos; will not be mapped by MicroLite as it has no ColumnAttribute.
        /// </summary>
        internal static string AttributeMappingConvention_IgnoringProperty {
            get {
                return ResourceManager.GetString("AttributeMappingConvention_IgnoringProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; as the mapping convention..
        /// </summary>
        internal static string ConfigureExtensions_UsingMappingConvention {
            get {
                return ResourceManager.GetString("ConfigureExtensions_UsingMappingConvention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}.{1}&apos; will not be mapped by MicroLite as the convention settings have specified it is ignored.
        /// </summary>
        internal static string ConventionMappingConvention_IgnoringProperty {
            get {
                return ResourceManager.GetString("ConventionMappingConvention_IgnoringProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building an IDbCommand for the SqlQuery.
        /// </summary>
        internal static string DbDialect_BuildingCommand {
            get {
                return ResourceManager.GetString("DbDialect_BuildingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}.{1}&apos; will not be mapped by MicroLite as it has IgnoreColumnAttribute specified.
        /// </summary>
        internal static string DefaultMappingConvention_IgnoringProperty {
            get {
                return ResourceManager.GetString("DefaultMappingConvention_IgnoringProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a session factory for the connection named &apos;{0}&apos; using the &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string FluentConfiguration_CreatingSessionFactory {
            get {
                return ResourceManager.GetString("FluentConfiguration_CreatingSessionFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the identifier value for an instance of the type &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string IListener_SettingIdentifierValue {
            get {
                return ResourceManager.GetString("IListener_SettingIdentifierValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapping the property &apos;{0}.{1}&apos; to the column &apos;{2}&apos;.
        /// </summary>
        internal static string MappingConvention_MappingColumnToProperty {
            get {
                return ResourceManager.GetString("MappingConvention_MappingColumnToProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapping the type &apos;{0}&apos; to the table &apos;{1}.{2}&apos;.
        /// </summary>
        internal static string MappingConvention_MappingTypeToTable {
            get {
                return ResourceManager.GetString("MappingConvention_MappingTypeToTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}.{1}&apos; will not be mapped by MicroLite as it does not have a public getter and setter..
        /// </summary>
        internal static string MappingConvention_PropertyNotGetAndSet {
            get {
                return ResourceManager.GetString("MappingConvention_PropertyNotGetAndSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating instance of &apos;{0}&apos; using the results in the IDataReader.
        /// </summary>
        internal static string ObjectInfo_CreatingInstance {
            get {
                return ResourceManager.GetString("ObjectInfo_CreatingInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating the ObjectInfo for the type &apos;{0}&apos;.
        /// </summary>
        internal static string ObjectInfo_CreatingObjectInfo {
            get {
                return ResourceManager.GetString("ObjectInfo_CreatingObjectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving the ObjectInfo for &apos;{0}&apos;.
        /// </summary>
        internal static string ObjectInfo_RetrievingObjectInfo {
            get {
                return ResourceManager.GetString("ObjectInfo_RetrievingObjectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closing the database connection.
        /// </summary>
        internal static string Session_ClosingConnection {
            get {
                return ResourceManager.GetString("Session_ClosingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Session has been disposed.
        /// </summary>
        internal static string Session_Disposed {
            get {
                return ResourceManager.GetString("Session_Disposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing &apos;{0}&apos; queries.
        /// </summary>
        internal static string Session_ExecutingQueries {
            get {
                return ResourceManager.GetString("Session_ExecutingQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening the database connection.
        /// </summary>
        internal static string Session_OpeningConnection {
            get {
                return ResourceManager.GetString("Session_OpeningConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new async read only session for connection named &apos;{0}&apos;.
        /// </summary>
        internal static string SessionFactory_CreatingAsyncReadOnlySession {
            get {
                return ResourceManager.GetString("SessionFactory_CreatingAsyncReadOnlySession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new async session for connection named &apos;{0}&apos;.
        /// </summary>
        internal static string SessionFactory_CreatingAsyncSession {
            get {
                return ResourceManager.GetString("SessionFactory_CreatingAsyncSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new read only session for connection named &apos;{0}&apos;.
        /// </summary>
        internal static string SessionFactory_CreatingReadOnlySession {
            get {
                return ResourceManager.GetString("SessionFactory_CreatingReadOnlySession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new session for connection named &apos;{0}&apos;.
        /// </summary>
        internal static string SessionFactory_CreatingSession {
            get {
                return ResourceManager.GetString("SessionFactory_CreatingSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating &apos;{0}&apos; SqlQuery.
        /// </summary>
        internal static string SqlDialect_CreatingSqlQuery {
            get {
                return ResourceManager.GetString("SqlDialect_CreatingSqlQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning a new Transaction with the IsolationLevel &apos;{0}&apos;..
        /// </summary>
        internal static string Transaction_BeginTransactionWithIsolationLevel {
            get {
                return ResourceManager.GetString("Transaction_BeginTransactionWithIsolationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction has successfully committed changes.
        /// </summary>
        internal static string Transaction_Committed {
            get {
                return ResourceManager.GetString("Transaction_Committed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction is committing changes.
        /// </summary>
        internal static string Transaction_Committing {
            get {
                return ResourceManager.GetString("Transaction_Committing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction has been disposed.
        /// </summary>
        internal static string Transaction_Disposed {
            get {
                return ResourceManager.GetString("Transaction_Disposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction is being disposed with uncommitted changes, they will be automatically rolled back.
        /// </summary>
        internal static string Transaction_DisposedUncommitted {
            get {
                return ResourceManager.GetString("Transaction_DisposedUncommitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction has rolled back changes.
        /// </summary>
        internal static string Transaction_RolledBack {
            get {
                return ResourceManager.GetString("Transaction_RolledBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction is rolling back changes.
        /// </summary>
        internal static string Transaction_RollingBack {
            get {
                return ResourceManager.GetString("Transaction_RollingBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction rolling back changes from failed commit.
        /// </summary>
        internal static string Transaction_RollingBackFailedCommit {
            get {
                return ResourceManager.GetString("Transaction_RollingBackFailedCommit", resourceCulture);
            }
        }
    }
}
